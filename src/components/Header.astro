---
import Hr from "./Hr.astro";
import IconX from "@/assets/icons/IconX.svg";
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconSearch from "@/assets/icons/IconSearch.svg";
import IconArchive from "@/assets/icons/IconArchive.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import IconMenuDeep from "@/assets/icons/IconMenuDeep.svg";
import IconChevronDown from "@/assets/icons/IconChevronDown.svg";
import LinkButton from "./LinkButton.astro";
import { SITE } from "@/config"

const { pathname } = Astro.url;

// Remove trailing slash from current pathname if exists
const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentPathArray = currentPath.split("/").filter(p => p.trim());
  const pathArray = path.split("/").filter(p => p.trim());

  return currentPath === path || currentPathArray[0] === pathArray[0];
};

// 导航菜单配置
const navItems = [
  { title: "笔记", href: "/posts", subItems: [
    { title: "技术文章", href: "/posts/tech" },
    { title: "生活随笔", href: "/posts/life" },
    { title: "学习笔记", href: "/posts/notes" }
  ]},
  { title: "标签", href: "/tags" },
  { title: "项目", href: "/projects", subItems: [
    { title: "前端项目", href: "/projects/frontend" },
    { title: "后端项目", href: "/projects/backend" },
    { title: "工具开发", href: "/projects/tools" }
  ]},
  { title: "工具集", href: "/tools" },
  { title: "时光", href: "/photos" },
  { title: "朋友们", href: "/friends" },
  { title: "关于", href: "/about" }
];
---

<header>
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute start-16 -top-full z-50 bg-background px-3 py-2 text-accent backdrop-blur-lg transition-all focus:top-4"
  >
    Skip to content
  </a>
  <div
    id="nav-container"
    class="mx-auto flex max-w-app flex-col items-center justify-between sm:flex-row"
  >
    <div
      id="top-nav-wrap"
      class="relative flex w-full items-baseline justify-between bg-background p-4 sm:items-center sm:py-6"
    >
      <a
        href="/"
        class="absolute py-1 text-xl leading-8 font-semibold whitespace-nowrap sm:static sm:my-auto sm:text-2xl sm:leading-none"
      >
        {SITE.title}
      </a>
      <nav
        id="nav-menu"
        class="flex w-full flex-col items-center sm:ms-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0"
      >
        <button
          id="menu-btn"
          class="focus-outline self-end p-2 sm:hidden"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <IconX id="close-icon" class="hidden" />
          <IconMenuDeep id="menu-icon" />
        </button>
        <ul
          id="menu-items"
          class:list={[
            "mt-4 grid w-44 grid-cols-2 place-content-center gap-2",
            "[&>li]:text-center [&>li>a]:block [&>li>a]:px-4 [&>li>a]:py-3 [&>li>a]:text-center [&>li>a]:font-medium [&>li>a]:hover:text-accent sm:[&>li>a]:px-2 sm:[&>li>a]:py-1",
            "hidden",
            "sm:mt-0 sm:flex sm:w-auto sm:gap-x-5 sm:gap-y-0",
            "sm:items-center",
          ]}
        >
          {navItems.map((item) => (
            <li class:list={[
              "col-span-2 relative group",
              { "sm:relative": item.subItems }
            ]}>
              {item.subItems ? (
                <button
                  class="w-full flex items-center justify-center gap-1 hover:text-accent focus:outline-none"
                  aria-expanded="false"
                  aria-haspopup="true"
                >
                  <span>{item.title}</span>
                  <IconChevronDown class="w-4 h-4 transition-transform duration-200 group-hover:-rotate-90" />
                </button>
              ) : (
                <a
                  href={item.href}
                  class:list={[
                    "block text-center",
                    { "active-nav": isActive(item.href) }
                  ]}
                >
                  {item.title}
                </a>
              )}
              
              {item.subItems && (
                <ul
                  class:list={[
                    "absolute left-0 mt-2 min-w-max origin-top-left rounded-md bg-background shadow-lg ring-1 ring-border focus:outline-none",
                    "opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200",
                    "sm:left-0 sm:right-auto sm:origin-top-left",
                    "hidden sm:block",
                    "z-50"
                  ]}
                  role="menu"
                  aria-orientation="vertical"
                  tabindex="-1"
                >
                  {item.subItems.map((subItem) => (
                    <li role="none">
                      <a
                        href={subItem.href}
                        class="block px-4 py-2 text-sm text-center text-foreground hover:bg-muted hover:text-accent"
                        role="menuitem"
                        tabindex="-1"
                      >
                        {subItem.title}
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))}
          {
            SITE.showArchives && (
              <li class="col-span-2">
                <LinkButton
                  href="/archives"
                  class:list={[
                    "focus-outline flex justify-center p-3 sm:p-1",
                    {
                      "active-nav [&>svg]:stroke-accent": isActive("/archives"),
                    },
                  ]}
                  ariaLabel="archives"
                  title="Archives"
                >
                  <IconArchive class="hidden sm:inline-block" />
                  <span class="sm:sr-only">Archives</span>
                </LinkButton>
              </li>
            )
          }
          <li class="col-span-1 flex items-center justify-center">
            <LinkButton
              href="/search"
              class:list={[
                "focus-outline flex p-3 sm:p-1",
                { "[&>svg]:stroke-accent": isActive("/search") },
              ]}
              ariaLabel="search"
              title="Search"
            >
              <IconSearch />
              <span class="sr-only">Search</span>
            </LinkButton>
          </li>
          {
            SITE.lightAndDarkMode && (
              <li class="col-span-1 flex items-center justify-center">
                <button
                  id="theme-btn"
                  class="focus-outline relative size-12 p-4 sm:size-8 hover:[&>svg]:stroke-accent"
                  title="Toggles light & dark"
                  aria-label="auto"
                  aria-live="polite"
                >
                  <IconMoon class="absolute top-[50%] left-[50%] -translate-x-[50%] -translate-y-[50%] scale-100 transition-all dark:scale-0" />
                  <IconSunHigh class="absolute top-[50%] left-[50%] -translate-x-[50%] -translate-y-[50%] scale-0 transition-all dark:scale-100" />
                </button>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  /* 箭头旋转样式 */
  .rotate-arrow {
    transition: transform 0.2s ease-in-out;
  }
  
  .rotate-arrow.rotated {
    transform: rotate(-90deg);
  }
  
  /* 移动端二级菜单样式 */
  @media (max-width: 639px) {
    .group .absolute {
      position: static;
      margin: 0;
      padding: 0;
      width: auto;
      min-width: 0;
      max-width: none;
      box-shadow: none;
      border: none;
      background: transparent;
      overflow: visible;
    }
    
    .group .absolute li {
      margin: 0;
      padding: 0;
      border: none;
    }
    
    .group .absolute li a {
      padding: 0.75rem 1rem 0.75rem 2rem;
      font-size: 0.875rem;
      color: var(--color-foreground-muted);
      line-height: 1.4;
      background: transparent;
      transition: color 0.2s;
      display: block;
      white-space: nowrap;
    }
    
    .group .absolute li a:hover,
    .group .absolute li a:focus {
      color: var(--color-accent);
      background: transparent;
    }
  }
  
  /* 无障碍访问支持 */
  @media (prefers-reduced-motion: reduce) {
    .transition-all {
      transition: none;
    }
  }
  
  /* 键盘导航支持 */
  .group:focus-within .absolute {
    opacity: 1;
    visibility: visible;
  }
</style>

<script>
  function toggleNav() {
    const menuBtn = document.querySelector("#menu-btn");
    const menuItems = document.querySelector("#menu-items");
    const menuIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");

    if (!menuBtn || !menuItems || !menuIcon || !closeIcon) return;

    menuBtn.addEventListener("click", () => {
      const openMenu = menuBtn.getAttribute("aria-expanded") === "true";

      menuBtn.setAttribute("aria-expanded", openMenu ? "false" : "true");
      menuBtn.setAttribute("aria-label", openMenu ? "Open Menu" : "Close Menu");

      menuItems.classList.toggle("hidden");
      menuIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });

    // 二级菜单交互和箭头旋转 - 仅支持点击事件
    const dropdownButtons = document.querySelectorAll('[aria-haspopup="true"]');
    
    dropdownButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        const submenu = button.nextElementSibling;
        const arrowIcon = button.querySelector('.rotate-arrow');
        
        // 关闭其他打开的子菜单
        dropdownButtons.forEach(otherBtn => {
          if (otherBtn !== button) {
            otherBtn.setAttribute('aria-expanded', 'false');
            otherBtn.nextElementSibling?.classList.add('hidden');
            const otherArrow = otherBtn.querySelector('.rotate-arrow');
            if (otherArrow) otherArrow.classList.remove('rotated');
          }
        });
        
        button.setAttribute('aria-expanded', !isExpanded ? 'true' : 'false');
        submenu?.classList.toggle('hidden');
        
        // 点击时旋转箭头（仅逆时针旋转90度）
        if (arrowIcon) {
          arrowIcon.classList.toggle('rotated', !isExpanded);
        }
      });
    });

    // 点击外部关闭菜单
    document.addEventListener('click', (e) => {
      if (e.target && e.target instanceof Element && !e.target.closest('#nav-menu')) {
        dropdownButtons.forEach(btn => {
          btn.setAttribute('aria-expanded', 'false');
          btn.nextElementSibling?.classList.add('hidden');
        });
      }
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
